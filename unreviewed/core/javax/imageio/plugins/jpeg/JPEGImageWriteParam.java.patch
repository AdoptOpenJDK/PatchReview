diff -r f9fb8c4b4550 src/share/classes/javax/imageio/plugins/jpeg/JPEGImageWriteParam.java
--- a/src/share/classes/javax/imageio/plugins/jpeg/JPEGImageWriteParam.java	Mon Jan 30 11:44:45 2012 +0000
+++ b/src/share/classes/javax/imageio/plugins/jpeg/JPEGImageWriteParam.java	Sat Feb 11 19:18:48 2012 +0000
@@ -167,7 +167,7 @@
             (getCompressionType() == null)) {
             throw new IllegalStateException("No compression type set!");
         }
-        return (String[])qualityDescs.clone();
+        return qualityDescs.clone();
     }
 
     public float[] getCompressionQualityValues() {
@@ -179,7 +179,7 @@
             (getCompressionType() == null)) {
             throw new IllegalStateException("No compression type set!");
         }
-        return (float[])qualityVals.clone();
+        return qualityVals.clone();
     }
     /**
      * Returns <code>true</code> if tables are currently set.
@@ -222,9 +222,9 @@
             (DCHuffmanTables.length != ACHuffmanTables.length)) {
                 throw new IllegalArgumentException("Invalid JPEG table arrays");
         }
-        this.qTables = (JPEGQTable[])qTables.clone();
-        this.DCHuffmanTables = (JPEGHuffmanTable[])DCHuffmanTables.clone();
-        this.ACHuffmanTables = (JPEGHuffmanTable[])ACHuffmanTables.clone();
+        this.qTables = qTables.clone();
+        this.DCHuffmanTables = DCHuffmanTables.clone();
+        this.ACHuffmanTables = ACHuffmanTables.clone();
     }
 
     /**
@@ -250,7 +250,7 @@
      * @see #setEncodeTables
      */
     public JPEGQTable[] getQTables() {
-        return (qTables != null) ? (JPEGQTable[])qTables.clone() : null;
+        return (qTables != null) ? qTables.clone() : null;
     }
 
     /**
@@ -265,7 +265,7 @@
      */
     public JPEGHuffmanTable[] getDCHuffmanTables() {
         return (DCHuffmanTables != null)
-            ? (JPEGHuffmanTable[])DCHuffmanTables.clone()
+            ? DCHuffmanTables.clone()
             : null;
     }
 
@@ -281,7 +281,7 @@
      */
     public JPEGHuffmanTable[] getACHuffmanTables() {
         return (ACHuffmanTables != null)
-            ? (JPEGHuffmanTable[])ACHuffmanTables.clone()
+            ? ACHuffmanTables.clone()
             : null;
     }
 
