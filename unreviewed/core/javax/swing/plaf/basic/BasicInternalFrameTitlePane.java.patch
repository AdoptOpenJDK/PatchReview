diff -r 7baa22e6a6b3 src/share/classes/javax/swing/plaf/basic/BasicInternalFrameTitlePane.java
--- a/src/share/classes/javax/swing/plaf/basic/BasicInternalFrameTitlePane.java	Fri Jun 01 00:05:21 2012 -0700
+++ b/src/share/classes/javax/swing/plaf/basic/BasicInternalFrameTitlePane.java	Mon Jun 04 20:03:06 2012 +0100
@@ -59,6 +59,9 @@
  */
 public class BasicInternalFrameTitlePane extends JComponent
 {
+
+    private static final long serialVersionUID = -8922405444584076627L;
+
     protected JMenuBar menuBar;
     protected JButton iconButton;
     protected JButton maxButton;
@@ -599,6 +602,7 @@
      * This class should be treated as a &quot;protected&quot; inner class.
      * Instantiate it only within subclasses of <Foo>.
      */
+    @SuppressWarnings("serial")
     public class CloseAction extends AbstractAction {
         public CloseAction() {
             super(UIManager.getString(
@@ -616,6 +620,7 @@
      * This class should be treated as a &quot;protected&quot; inner class.
      * Instantiate it only within subclasses of <Foo>.
      */
+    @SuppressWarnings("serial")
     public class MaximizeAction extends AbstractAction {
         public MaximizeAction() {
             super(UIManager.getString(
@@ -645,6 +650,7 @@
      * This class should be treated as a &quot;protected&quot; inner class.
      * Instantiate it only within subclasses of <Foo>.
      */
+    @SuppressWarnings("serial")
     public class IconifyAction extends AbstractAction {
         public IconifyAction() {
             super(UIManager.getString(
@@ -666,6 +672,7 @@
      * This class should be treated as a &quot;protected&quot; inner class.
      * Instantiate it only within subclasses of <Foo>.
      */
+    @SuppressWarnings("serial")
     public class RestoreAction extends AbstractAction {
         public RestoreAction() {
             super(UIManager.getString(
@@ -693,6 +700,7 @@
      * This class should be treated as a &quot;protected&quot; inner class.
      * Instantiate it only within subclasses of <Foo>.
      */
+    @SuppressWarnings("serial")
     public class MoveAction extends AbstractAction {
         public MoveAction() {
             super(UIManager.getString(
@@ -707,6 +715,7 @@
     /*
      * Handles showing and hiding the system menu.
      */
+    @SuppressWarnings("serial")
     private class ShowSystemMenuAction extends AbstractAction {
         private boolean show;   // whether to show the menu
 
@@ -727,6 +736,7 @@
      * This class should be treated as a &quot;protected&quot; inner class.
      * Instantiate it only within subclasses of <Foo>.
      */
+    @SuppressWarnings("serial")
     public class SizeAction extends AbstractAction {
         public SizeAction() {
             super(UIManager.getString(
@@ -743,6 +753,7 @@
      * This class should be treated as a &quot;protected&quot; inner class.
      * Instantiate it only within subclasses of <Foo>.
      */
+    @SuppressWarnings("serial")
     public class SystemMenuBar extends JMenuBar {
         public boolean isFocusTraversable() { return false; }
         public void requestFocus() {}
@@ -768,6 +779,8 @@
     } // end SystemMenuBar
 
 
+
+    @SuppressWarnings("serial")
     private class NoFocusButton extends JButton {
         private String uiKey;
         public NoFocusButton(String uiKey, String opacityKey) {
